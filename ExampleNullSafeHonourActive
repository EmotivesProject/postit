db.posts.aggregate([
  { "$lookup": {
    "from": "likes",
    "let": { "user_likes": "$user_likes" },
    "pipeline": [
       { "$match": { "$and": [ { "$expr": { "$in": [ "$_id", {$ifNull: ["$$user_likes",[]]} ] } }, { "active": true } ] } },
       { "$lookup": {
         "from": "users",
         "let": { "user": "$user" },
         "pipeline": [
           { "$match": { "$expr": { "$eq": [ "$_id", {$ifNull: ["$$user",[]]} ] } } }
         ],
         "as": "user"
       }}
     ],
     "as": "user_likes"
  }},
  { "$lookup": {
    "from": "users",
    "let": { "user": "$user" },
    "pipeline": [
       { "$match": { "$expr": { "$eq": [ "$_id", {$ifNull: ["$$user",[]]} ] } } }
     ],
     "as": "user"
  }},
  { "$lookup": {
    "from": "comments",
    "let": { "user_comments": "$user_comments" },
    "pipeline": [
       { "$match": { "$and": [ { "$expr": { "$in": [ "$_id", {$ifNull: ["$$user_comments",[]]} ] } }, { "active": true } ] } },
       { "$lookup": {
         "from": "users",
         "let": { "user": "$user" },
         "pipeline": [
           { "$match": { "$expr": { "$eq": [ "$_id", {$ifNull: ["$$user",[]]} ] } } }
         ],
         "as": "user"
       }}
     ],
     "as": "user_comments"
  }},
  { "$skip": 0},
  { "$limit": 5},
  { "$sort": { "_id": 1 }}
 ]).pretty()